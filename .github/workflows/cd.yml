name: Deploy

on:
  push:
    # branches:
    #   - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: 
      name: production

    steps:
      # リポジトリのソースコードを取得
      - name: Checkout code
        uses: actions/checkout@v4

      # RubyとBundlerをセットアップし、依存関係をキャッシュ
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      # Docker Buildxをセットアップしてビルドキャッシュを有効化
      - name: Set up Docker Buildx for cache
        uses: docker/setup-buildx-action@v3

      # GitHubランタイム情報をExposeしてDockerキャッシュを最適化
      - name: Expose GitHub Runtime for cache
        uses: crazy-max/ghaction-github-runtime@v3

      # AWSの認証情報を設定（ECRやEC2にアクセスするため）
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-1

      # EC2へのSSH接続を有効化（Kamalがデプロイできるように）
      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      # ECRにログイン（Docker認証用）
      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      # ECRパスワードを環境変数として設定（Kamal用）
      - name: Set KAMAL_REGISTRY_PASSWORD
        run: echo "KAMAL_REGISTRY_PASSWORD=$(aws ecr get-login-password --region ap-northeast-1)" >> $GITHUB_ENV

      # Kamal設定の確認とDocker認証テスト
      - name: Verify Kamal configuration and Docker auth
        env:
          RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}
        run: |
          echo "=== ECR Password Length Check ==="
          echo "Password length: ${#KAMAL_REGISTRY_PASSWORD}"
          echo "=== Kamal Registry Configuration ==="
          bin/kamal config | grep -A 10 -B 5 -i registry || echo "Registry config not found"
          echo "=== Docker Login Test ==="
          echo "Testing docker login to ECR host..."
          echo "${KAMAL_REGISTRY_PASSWORD}" | docker login --username aws --password-stdin 733853434519.dkr.ecr.ap-northeast-1.amazonaws.com
          echo "=== Docker Auth Check ==="
          cat ~/.docker/config.json | jq '.auths' || echo "No auth config found"

      - name: Deploy with Kamal
        id: kamal-deploy
        env:
          RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}
        run: bin/kamal deploy
